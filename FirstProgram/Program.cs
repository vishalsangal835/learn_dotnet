/*using System;
using System.Runtime.Intrinsics.Arm;
using System.Security.Cryptography.X509Certificates;
// See https://aka.ms/new-console-template for more information
// Console.WriteLine("Hello, World!");
// Console.WriteLine("Hello, World!");
// Console.ReadLine();
// Console.Beep();
// Console.ReadKey();

// // variable -> int ,

// int iAmANumber = 5;
// float pii = 3.1f;
// bool isExist = true;
// char at = '@';  -> allows a single character literal or unicode
// string name = "Vishal"; -> allows multiple letters and unicode
// Console.WriteLine(iAmANumber);
// Console.WriteLine(pii);
// Console.WriteLine(isExist);
// Console.WriteLine(name);
// Console.WriteLine(at);

// An assembly is a file that is automatically generated by the compiler upon successful compilation of every
// .NET application. It can be either a Dynamic Link Library or an executable file. 
// It is generated only once for an application and upon each subsequent compilation the assembly gets updated.


// default value of integer type =0
// sbyte x=120;   range===(-128 to 127)
//short x=30000;  range===(-32767 to 32767)
//int x=50000;    range===(-2147483648 to 2147483647)
//long x=55555;   range===(-9223327036854775808 to 9223327036854775807 )
// float a=1.23f  (7 digit precision) --> used in graphics libraries
// double x=1.5 (15 digit precision)  --> real world values except money calculation
// decimal x=23.55 (28 digit precision) --> financial application


//value type in detail----------->

// 1 .store actual data directly
// 2. typically stored in the stack
// 3. include int,float,long,double,char,bool,decimal, struct,enum
// 4. Nullable versions available (int? , float? , etc)
// 5. can be stored in heap if part of a reference type 
// 6. reference type ->reference type is a variable type which instead of storing the value in memory directly
// stores the memory loCATION of the actual data
// reference  type data type are  string, class, Array etc.. ---> help to save memory i.e. RAM


//comment  --->

///<summary>
// this is a main method 
///</summary>
namespace Program
{
    internal class Program1
    {
        static int age = 20;
        static void Main(string[] args)
        {
            Console.WriteLine(age);
            Console.WriteLine(age);
            // write cw and then press tab 2 times
            Console.Read();
            int num1 = 13;
            int num2 = 5;
            int sum = num1 + num2;

            double d1 = 3.5;
            double d2 = 1.337;
            double sumD = d1 / d2;

            Console.WriteLine("The sum of " + num1 + " and " + num2 + " is " + sum);
            Console.WriteLine(d1 + " divided by " + num2 + " is " + sumD);
            Console.Read();

            string myname = "Vishal";

            string message = "My name is " + myname;

            string capsMessage = message.ToUpper();

            string lowerCaseMessage = message.ToLower();

            Console.WriteLine(capsMessage);
            Console.WriteLine(lowerCaseMessage);
            Console.Read();
            // Class names like ClientActivity
            // class Program
            //{
            // Method name like CalculateValue
            // method arguments like firstNumber
            //static void Main(string[] args)
            //{
            // local variables like itemCount
            // use userControl instead of usrCtr 
            // don't use numbers at the start of variable names
            // Correct
            //string myName;
            //int lastNum;
            //bool isSaved;
            // Avoid
            // String myName;
            // Int32 lastNum;
            // Boolean isSaved;

        }
    }
}
*/